@model SIRS.Application.ViewModels.UsuarioViewModel

@{
    ViewData["Title"] = "Registro de Usuario";
    Layout = null;
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f7fc;
        margin: 0;
        padding: 0;
    }

    .container {
        max-width: 500px;
        margin: 50px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    h3 {
        text-align: center;
        color: #333;
    }

    .form-group {
        margin-bottom: 15px;
        font-weight: 500;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ddd;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        padding: 10px 15px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        width: 100%;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .text-danger {
        color: red;
    }

    .is-invalid {
        border-color: red;
    }

    .btn {
        border-radius: 0 5px 5px 0; /* Bordes redondeados solo en la esquina derecha */
        border-left: 0; /* Sin borde izquierdo para evitar duplicidad */
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .btn i {
            font-size: 1.2em;
            color: #007bff;
        }

        .btn:hover i {
            color: #0056b3;
        }

    .pe-4 {
        padding-right: 3rem; /* Espacio adicional para el botón */
    }

    .btn-outline-secondary {
        background-color: #fff;
        border-color: #ddd;
    }
</style>

<div class="content-wrapper">
    <div class="container">
        <h3>Registro de Usuario</h3>

        <form asp-action="Registrar" method="post" class="form-horizontal" id="registrationForm">
            <div class="form-group">
                <label asp-for="Username" class="control-label">DNI/NIE</label>
                <input asp-for="Username" class="form-control" id="Username" name="Username" />
                <span asp-validation-for="Username" class="text-danger"></span>
                <span id="usernameError" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Nombre" class="control-label">Nombre</label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Apellido1" class="control-label">Primer Apellido</label>
                <input asp-for="Apellido1" class="form-control" />
                <span asp-validation-for="Apellido1" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Apellido2" class="control-label">Segundo Apellido</label>
                <input asp-for="Apellido2" class="form-control" />
                <span asp-validation-for="Apellido2" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Email" class="control-label">Email</label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Password" class="control-label">Contraseña</label>
                <div class="input-group">
                    <input asp-for="Password" type="password" class="form-control pe-4" id="Password" name="Password" />
                    <div class="input-group-append">
                    <button type="button" class="btn btn-outline-secondary toggle-password" id="togglePassword">
                        <i class="fa fa-eye"></i>
                    </button>
                    </div>
                </div>
                <span asp-validation-for="Password" class="text-danger"></span>
                <span id="passwordError" class="text-danger"></span>
            </div>

            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
            {
                <div class="form-group">
                    <label asp-for="RolId" class="control-label">Rol</label>
                    <select asp-for="RolId" class="form-control" id="RolId" required>
                        <option value="">Seleccione un Rol</option>
                    </select>
                    <span asp-validation-for="RolId" class="text-danger"></span>
                </div>
            }

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Registrarse</button>
            </div>
        </form>
    </div>
</div>

<script>
    // Validación para DNI/NIE
    document.getElementById("Username").addEventListener("blur", function () {
        const username = this.value;
        const regexDni = /^[XYZ]?\d{5,8}[A-Z]$/;
        const usernameError = document.getElementById("usernameError");

        if (!regexDni.test(username)) {
            usernameError.textContent = "El DNI/NIE no es válido.";
            $("#Username").addClass("is-invalid");
        } else {
            usernameError.textContent = "";
            $("#Username").removeClass("is-invalid");
        }
    });

    // Validación al enviar el formulario
    document.getElementById("registrationForm").addEventListener("submit", function (event) {
        const usernameValid = /^[XYZ]?\d{5,8}[A-Z]$/.test(document.getElementById("Username").value);
        const usernameError = document.getElementById("usernameError");

        if (!usernameValid) {
            usernameError.textContent = "El DNI/NIE no es válido.";
            $("#Username").addClass("is-invalid");
            event.preventDefault(); // Impide el envío si es inválido
        }

        // Asegurarse de que todos los campos requeridos son válidos
        const requiredFields = document.querySelectorAll("[required]");
        requiredFields.forEach(function (field) {
            if (field.value === "") {
                field.classList.add("is-invalid");
                event.preventDefault(); // Impide el envío si algún campo requerido está vacío
            } else {
                field.classList.remove("is-invalid");
            }
        });
    });

    $(document).ready(function () {
        // Mostrar mensajes de éxito o error
        const successMessage = '@TempData["SuccessMessage"]';
        const errorMessage = '@TempData["ErrorMessage"]';

        if (successMessage) {
            toastr.success(successMessage);
        }
        if (errorMessage) {
            toastr.error(errorMessage);
        }

        // Alternar visibilidad de la contraseña
        $('#togglePassword').on('click', function () {
            const passwordField = $('#Password');
            const passwordFieldType = passwordField.attr('type');
            const icon = $(this).find('i');

            if (passwordFieldType === 'password') {
                passwordField.attr('type', 'text');
                icon.removeClass('fa-eye').addClass('fa-eye-slash');
            } else {
                passwordField.attr('type', 'password');
                icon.removeClass('fa-eye-slash').addClass('fa-eye');
            }
        });

        // Cargar roles dinámicamente
        function cargarRoles() {
            $.ajax({
                url: '/Account/GetAllRoles',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    const RolSelect = $('#RolId');
                    RolSelect.empty().append('<option value="">Seleccione un rol</option>');
                    data.forEach(function (Rol) {
                        RolSelect.append('<option value="' + Rol.Id + '">' + Rol.Nombre + '</option>');
                    });
                },
                error: function () {
                    toastr.error("Error al cargar los roles.");
                }
            });
        }

        cargarRoles();
    });
</script>
