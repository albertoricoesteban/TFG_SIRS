@using System.Security.Claims
@{
    ViewData["Title"] = "Calendario";
    string usuarioLogado = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var esAdmin = User.IsInRole("Administrador");
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>


<div class="content-wrapper">
    <input type="hidden" id="loggedInUserId" value="@usuarioLogado" />

    <div class="container-fluid">
        <div class="row mb-3">
            <div class="col-12">
                <h3>Calendario de Reservas</h3>
            </div>
        </div>

        <!-- Filtros -->
        <div class="row mb-3">
            <div class="col-md-4">
                <label for="edificioSelect">Edificio:</label>
                <select id="edificioSelect" class="form-control">
                    <option value="">Seleccione un edificio</option>
                    @* Opciones de edificio, se deben cargar desde el backend *@
                </select>
            </div>
            <div class="col-md-4">
                <label for="salaSelect">Sala:</label>
                <select id="salaSelect" class="form-control" disabled>
                    <option value="">Seleccione una sala</option>
                </select>
            </div>
            <div class="col-md-4 d-flex align-items-end">
                <button id="buscarBtn" class="btn btn-primary">Buscar</button>
            </div>
        </div>

        <!-- Calendario -->
        <div class="row">
            <div class="col-12">
                <div class="card card-primary">
                    <div class="card-body p-0">
                        <div id="calendar"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
        <script src="~/adminlte/plugins/moment/moment.min.js"></script>
        <script src="~/adminlte/plugins/fullcalendar/main.js"></script>
        <script src="~/adminlte/plugins/fullcalendar/locales/es.js"></script>
        <link href="~/adminlte/plugins/fullcalendar/main.css" rel="stylesheet">
        <script>
        $(document).ready(function () {
            var calendar;
            var Calendar = FullCalendar.Calendar;
            var calendarEl = document.getElementById('calendar');
            var loggedInUserId = $('#loggedInUserId').val(); // Obtener el ID del usuario logueado
            var isAdmin = @esAdmin.ToString().ToLower(); // Obtener si el usuario es administrador (true o false)

            // Función para inicializar el calendario
            function initializeCalendar(eventsUrl) {
                if (calendar) {
                    calendar.destroy(); // Limpia el calendario si ya existe
                }

                calendar = new Calendar(calendarEl, {
                    locale: 'es',
                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth'
                    },
                    initialView: 'dayGridMonth',
                    themeSystem: 'bootstrap',
                    events: eventsUrl,
                    editable: false,
                    droppable: false,
                    eventTimeFormat: {
                        hour: '2-digit',
                        minute: '2-digit',
                        meridiem: false
                    },
                    eventClick: function (info) {
                        const reservaId = info.event.id;
                        const usuarioId = info.event.extendedProps?.usuarioId || null;

                        if (isAdmin) {
                            // Permitir edición si es administrador
                            window.location.href = '/Reserva/Update/' + reservaId;
                            return;
                        }

                        if (usuarioId && String(usuarioId) !== String(loggedInUserId)) {
                            toastr.info('No puede editar una reserva que no es suya.');
                            return; // Salir si el evento no pertenece al usuario logueado
                        }

                        // Redirigir a la página de actualización si el usuario es el propietario del evento
                        window.location.href = '/Reserva/Update/' + reservaId;
                    },
                    eventContent: function (arg) {
                             const event = arg.event;
        const time = event.start ? moment(event.start).format('HH:mm') : ''; // Formatear la hora del evento
        const color = event.backgroundColor || '#000'; // Color del evento, por defecto negro si no está definido
        const textColor = event.textColor || '#000'; // Color del texto, por defecto negro si no está definido

        const innerHTML = `
            <div style="display: flex; align-items: center;">
                <div style="width: 10px; height: 10px; border-radius: 50%; background-color: ${color}; margin-right: 5px;"></div>
                <span style="color: ${textColor};">${time} - ${event.title}</span>
            </div>`;
                        return { html: innerHTML };
                    }
                });

                calendar.render();
            }

            // Cargar edificios dinámicamente
            $.getJSON('/Edificio/GetAll', function (data) {
                data.forEach(function (edificio) {
                    $('#edificioSelect').append(new Option(edificio.Descripcion, edificio.Id));
                });
            });

            // Cambiar salas según el edificio seleccionado
            $('#edificioSelect').on('change', function () {
                var Id = $(this).val();
                $('#salaSelect').empty().append('<option value="">Seleccione una sala</option>');

                if (Id && !isNaN(Id)) {
                    $.ajax({
                        url: '/Reserva/GetSalasByEdificio',
                        type: 'GET',
                        data: { edificioId: Id },
                        success: function (data) {
                            if (data.length > 0) {
                                $.each(data, function (index, sala) {
                                    $('#salaSelect').append('<option value="' + sala.Id + '">' + sala.NombreCorto + '</option>');
                                });
                                $('#salaSelect').prop('disabled', false);
                            } else {
                                $('#salaSelect').prop('disabled', true);
                            }
                        },
                        error: function () {
                            toastr.warning('No se pudieron cargar las salas. Intente nuevamente.');
                            $('#salaSelect').prop('disabled', true);
                        }
                    });
                } else {
                    $('#salaSelect').prop('disabled', true);
                }
            });

            // Buscar reservas
            $('#buscarBtn').on('click', function () {
                const edificioId = $('#edificioSelect').val();
                const salaId = $('#salaSelect').val();
                const eventsUrl = `/Reserva/ObtenerReservasCalendario?edificioId=${edificioId}&salaId=${salaId}`;

                initializeCalendar(eventsUrl);
            });

            // Inicializar el calendario sin filtros
            initializeCalendar('/Reserva/ObtenerReservasCalendario');
        });
    </script>



}

<style>
    #calendar {
        width: 100%;
        max-height: 800px;
        margin: 0 auto;
    }

    .content-wrapper {
        margin-left: 250px;
    }
</style>
