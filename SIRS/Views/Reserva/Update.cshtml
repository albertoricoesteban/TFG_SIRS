@model SIRS.Application.ViewModels.ReservaDTO

@{
    ViewData["Title"] = "Editar Reserva";
    bool esAdmin = User.IsInRole("Administrador");
    bool esSolicitante = User.IsInRole("Solicitante");
    var fechaActual = DateTime.Now;
    var fechaHoraReserva = Model.FechaReserva.Date.Add(Model.HoraInicio); // Combinamos la fecha y hora de la reserva
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<div class="content-wrapper">
    <div class="content">
        <div class="container-fluid">

            <div class="row mb-4">
                <div class="col-12">
                    <h3>Editar Reserva</h3>
                </div>
            </div>

            <!-- Etiqueta con el estado de la reserva -->
            <div class="row mb-3">
                <div class="col-12">
                    <h5>Estado de la Reserva:</h5>
                    @if (Model.Aprobada == null)
                    {
                        <span class="badge badge-warning">Pendiente</span> <!-- Color amarillo para pendiente -->
                    }
                    else if (Model.Aprobada == true)
                    {
                        <span class="badge badge-success">Aprobada</span> <!-- Color verde para aprobada -->
                    }
                    else
                    {
                        <span class="badge badge-danger">Rechazada</span> <!-- Color rojo para rechazada -->
                    }
                </div>
            </div>

            <form method="post" action="@Url.Action("Edit", "Reserva")">
                <input type="hidden" name="Id" value="@Model.Id" />
                <input type="hidden" name="usuarioId" value="@Model.UsuarioId" />
                <div class="row">
                    <!-- Nombre de la Reserva -->
                    <div class="col-md-6">
                        <label for="nombreReserva">Nombre de la reserva</label>
                        <input type="text" class="form-control" id="Nombre" name="Nombre" maxlength="500" required value="@Model.Nombre" placeholder="Nombre de la reserva">
                    </div>

                    <!-- Observaciones -->
                    <div class="col-md-6">
                        <label for="observaciones">Observaciones</label>
                        <textarea class="form-control" id="Observaciones" name="Observaciones" maxlength="1000" rows="2" placeholder="Opcional">@Model.Observaciones</textarea>
                    </div>
                </div>

                <div class="row mt-3">
                    <!-- Fecha de la Reserva -->
                    <div class="col-md-4">
                        <label for="fechaReserva">Fecha de la reserva</label>
                        <input type="date" class="form-control" id="FechaReserva" name="FechaReserva" required value="@Model.FechaReserva.ToString("yyyy-MM-dd")">
                    </div>

                    <!-- Hora de Inicio -->
                    <div class="col-md-4">
                        <label for="horaInicio">Hora de inicio</label>
                        <input type="time" class="form-control" id="HoraInicio" name="HoraInicio" required value="@Model.HoraInicio.ToString(@"hh\:mm")">
                    </div>

                    <!-- Tiempo Total -->
                    <div class="col-md-4">
                        <label for="tiempoTotal">Tiempo total (en minutos)</label>
                        <input type="number" class="form-control" id="TiempoTotal" name="TiempoTotal" min="1" required value="@Model.TiempoTotal" placeholder="Duración en minutos">
                    </div>
                </div>

                <div class="row mt-3">
                    <!-- Edificio -->
                    <div class="col-md-6 mb-3">
                        <label for="EdificioId">Edificio</label>
                        @Html.DropDownListFor(model => model.EdificioId,
                                 new SelectList(ViewBag.Edificios as IEnumerable<SelectListItem>, "Value", "Text", Model.EdificioId),
                                 "Seleccione el edificio",
                                 new { @class = "form-control", required = "required" })
                    </div>

                    <!-- Sala -->
                    <div class="col-md-6">
                        <label for="SalaId">Sala</label>
                        @Html.DropDownListFor(model => model.SalaId,
                                 new SelectList(ViewBag.Salas as IEnumerable<SelectListItem>, "Value", "Text", Model.SalaId),
                                 "Seleccione una sala",
                                 new { @class = "form-control", required = "required", id = "SalaId" })
                    </div>
                </div>

                <div class="row mt-4">
                    <div class="col-12 text-right">
                        <!-- Botón Guardar: Solo si la reserva no ha sido aprobada o el usuario es administrador y la fecha no ha pasado -->
                        <div class="col-12 text-right">
                            @if (esAdmin)
                            {
                                <!-- Si es administrador, puede hacer todo -->
                                @if (Model.Aprobada == true && fechaHoraReserva >= fechaActual)
                                {
                                    <!-- Mostrar botón para eliminar reserva si está aprobada y la fecha no ha pasado -->
                                    <button type="button" class="btn btn-danger" id="EliminarReservaBtn">Eliminar Reserva</button>
                                }
                                else if (Model.Aprobada == false && fechaHoraReserva >= fechaActual)
                                {
                                    <!-- Mostrar botón para reactivar reserva si no está aprobada y la fecha no ha pasado -->
                                    <button type="button" class="btn btn-info" id="ReactivarReservaBtn">Reactivar Reserva</button>
                                }
                                else if (Model.Aprobada == true && fechaHoraReserva < fechaActual)
                                {
                                    <!-- No mostrar botones si está aprobada y la fecha ya pasó -->
                                }
                                else if (Model.Aprobada == null && fechaHoraReserva >= fechaActual)
                                {
                                    <!-- Mostrar botón para eliminar reserva si está aprobada y la fecha no ha pasado -->
                                    <button type="button" class="btn btn-success" id="AprobarReservaBtn">Aprobar Reserva</button>
                                }
                            }
                            else if (esSolicitante)
                            {
                                <!-- Si es solicitante, solo puede cancelar reservas que no hayan pasado -->
                                @if (fechaHoraReserva >= fechaActual)
                                {
                                    <button type="button" class="btn btn-danger" id="CancelarReservaBtn">Cancelar Reserva</button>
                                }
                            }
                        </div>

                    </div>
                </div>
            </form>

        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        // Al cambiar el edificio, cargamos las salas correspondientes
        $('#EdificioId').on('change', function () {
            var edificioId = $(this).val(); // Obtener el ID del edificio seleccionado
            $('#SalaId').empty().append('<option value="">Seleccione una sala</option>'); // Reiniciar las opciones de sala y seleccionar la opción vacía

            if (edificioId && !isNaN(edificioId)) { // Verificar que el ID no esté vacío y sea válido
                // Realizar la solicitud AJAX para obtener las salas
                $.ajax({
                    url: '/Reserva/GetSalasByEdificio', // Endpoint para obtener las salas
                    type: 'GET',
                    data: { edificioId: edificioId }, // Parámetros enviados al servidor
                    success: function (data) {
                        // Llenar el dropdown de salas con los datos obtenidos
                        $.each(data, function (index, sala) {
                            $('#SalaId').append('<option value="' + sala.Id + '">' + sala.NombreCorto + '</option>');
                        });

                        // Preseleccionar la sala "Seleccione una sala" (value="")
                        $('#SalaId').val(''); // Asegura que la opción "Seleccione una sala" esté seleccionada

                        // Preseleccionar la sala si ya hay una seleccionada en el modelo
                        if ('@Model.SalaId' != '') {
                            $('#SalaId').val('@Model.SalaId');
                        }
                    },
                    error: function () {
                        alert('No se pudieron cargar las salas. Intente nuevamente.');
                    }
                });
            } else {
                // Si no hay un edificio válido seleccionado, se deselecciona cualquier sala
                $('#SalaId').val(''); // Asegura que la opción "Seleccione una sala" esté seleccionada
            }
        });

        // Si ya hay un edificio seleccionado al cargar la página, disparar el cambio para cargar las salas
        if ('@Model.EdificioId' != '') {
            $('#EdificioId').trigger('change');
        }

        // Confirmación para cancelar la reserva
        $('#CancelarReservaBtn').click(function () {
            if (confirm("¿Está seguro de que desea cancelar esta reserva?")) {
                var reservaId = '@Model.Id';
                $.ajax({
                    url: '/Reserva/CancelarReserva', // Ruta al método del controlador para cancelar la reserva
                    type: 'POST',
                    data: { id: reservaId }, // Enviar el Id de la reserva
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message); // Mostrar mensaje de éxito
                            // Redirigir a la lista de reservas o a cualquier página relevante
                            window.location.href = '/Reserva/Index';
                        } else {
                            toastr.error(response.message); // Mostrar mensaje de error
                        }
                    },
                    error: function () {
                        toastr.error('Hubo un error al intentar cancelar la reserva. Intente nuevamente.');
                    }
                });
            }
        });
        $('#ReactivarReservaBtn').click(function () {
            if (confirm("¿Está seguro de que desea reactivar esta reserva?")) {
                var reservaId = '@Model.Id';
                $.ajax({
                    url: '/Reserva/ReactivarReserva', // Ruta al método del controlador para cancelar la reserva
                    type: 'POST',
                    data: { id: reservaId }, // Enviar el Id de la reserva
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message); // Mostrar mensaje de éxito
                            // Redirigir a la lista de reservas o a cualquier página relevante
                            window.location.href = '/Reserva/Index';
                        } else {
                            toastr.error(response.message); // Mostrar mensaje de error
                        }
                    },
                    error: function () {
                        toastr.error('Hubo un error al intentar reactivar la reserva. Intente nuevamente.');
                    }
                });
            }
        });
        // Confirmación para cancelar la reserva
        $('#AprobarReservaBtn').click(function () {
            if (confirm("¿Está seguro de que desea aprobar esta reserva?")) {
                var reservaId = '@Model.Id';
                $.ajax({
                    url: '/Reserva/AprobarReserva', // Ruta al método del controlador para cancelar la reserva
                    type: 'POST',
                    data: { id: reservaId }, // Enviar el Id de la reserva
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message); // Mostrar mensaje de éxito
                            // Redirigir a la lista de reservas o a cualquier página relevante
                            window.location.href = '/Reserva/Index';
                        } else {
                            toastr.error(response.message); // Mostrar mensaje de error
                        }
                    },
                    error: function () {
                        toastr.error('Hubo un error al intentar cancelar la reserva. Intente nuevamente.');
                    }
                });
            }
        });
        function mostrarMensaje() {
            // Mostrar mensajes de éxito o error si existen
            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';

            if (successMessage) {
                toastr.success(successMessage);
            }

            if (errorMessage) {
                toastr.error(errorMessage);
            }
        }

        mostrarMensaje();
    });
</script>
